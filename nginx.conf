# Configuración para HTTP (Puerto 80)
server {
    listen 80;
    server_name applottobueno.com www.applottobueno.com;

    # Servir desafíos ACME de Let's Encrypt
    location /.well-known/acme-challenge/ {
        # Esta ruta debe coincidir con el volumen mapeado y el comando de Certbot
        root /var/www/certbot; 
        allow all;
    }

    # Redirigir todo lo demás a HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Configuracion SSL (Puerto 443)
server {
    listen 443 ssl;
    server_name applottobueno.com www.applottobueno.com;

    # Rutas estándar de Certbot (se crearán dentro del volumen mapeado)
    ssl_certificate /etc/nginx/certs/fullchain.pem; 
    ssl_certificate_key /etc/nginx/certs/privkey.pem; 
    # Considera añadir configuraciones SSL recomendadas, por ejemplo:
    # include /etc/nginx/options-ssl-nginx.conf; 
    # ssl_dhparam /etc/nginx/ssl-dhparams.pem; 

    # Proxy para las peticiones a la API del backend
    location /api/ {
        proxy_pass http://app:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Headers CORS (importantes para la API)
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # Necesario para manejar la petición OPTIONS de pre-vuelo CORS
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            return 204;
        }
    }

    # Proxy para TODAS las demás peticiones (Frontend)
    location / {
        proxy_pass http://frontend:3000; # Apunta al servicio frontend de Next.js
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90; # Aumentar timeout si es necesario para SSR
    }
}